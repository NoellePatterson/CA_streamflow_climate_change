grid = precip_all_grids[c(locs)]
grid
#################
### FUNCTIONS ###
#################
separate_years <- function(precip_all_grids, year){
locs = seq(1, length(precip_all_grids), 4869) + year - 1
grid = precip_all_grids[c(locs)]
return(grid)
}
precip_manip <- function(annual_precip){
annual_precip2 = lapply(annual_precip,`+`,1)
return(annual_precip2)
}
reinsert_precip <- function(new_grids, year){
locs = seq(1, length(precip_all_grids), 4869) + year - 1
precip_all_grids_updated[c(locs)] <- new_grids[[year]]
}
# proof of concept for first year data (out of 64 total years)
precip_all_grids = files[[1]][,6] # precipe is 6th col of df
grid_ls = seq(1, 4869, 1)
all_grids = lapply(grid_ls, separate_years, precip_all_grids=precip_all_grids)
length(all_grids)
all_grids[1]
all_grids[1000]
all_grids[2000]
# next: apply an intensity alteration to each time series
new_grids = lapply(all_grids, precip_manip)
new_grids[1]
new_grids = lapply(new_grids, unlist)
new_grids[1]
new_grids[1000]
new_grids[2000]
new_grids[4000]
# then: re-insert to db for that year
precip_all_grids_updated = vector(mode="double", length=length(precip_all_grids))
lapply(grid_ls, reinsert_precip, new_grids=new_grids)
head(precip_all_grids_updated)
precip_all_grids_updated[1:200]
year = 1
locs = seq(1, length(precip_all_grids), 4869) + year - 1
precip_all_grids_updated[c(locs)] <- new_grids[[year]]
precip_all_grids_updated[1:200]
reinsert_precip <- function(new_grids, year){
print(year)
locs = seq(1, length(precip_all_grids), 4869) + year - 1
precip_all_grids_updated[c(locs)] <- new_grids[[year]]
}
# then: re-insert to db for that year
precip_all_grids_updated = vector(mode="double", length=length(precip_all_grids))
lapply(grid_ls, reinsert_precip, new_grids=new_grids)
precip_all_grids_updated[1:200]
grid_ls
reinsert_precip <- function(new_grids, year){
print(head(new_grids))
locs = seq(1, length(precip_all_grids), 4869) + year - 1
precip_all_grids_updated[c(locs)] <- new_grids[[year]]
}
# then: re-insert to db for that year
precip_all_grids_updated = vector(mode="double", length=length(precip_all_grids))
lapply(grid_ls, reinsert_precip, new_grids=new_grids)
reinsert_precip <- function(new_grids, year){
print(head(new_grids[[year]]))
locs = seq(1, length(precip_all_grids), 4869) + year - 1
precip_all_grids_updated[c(locs)] <- new_grids[[year]]
}
# then: re-insert to db for that year
precip_all_grids_updated = vector(mode="double", length=length(precip_all_grids))
lapply(grid_ls, reinsert_precip, new_grids=new_grids)
reinsert_precip <- function(new_grids, year){
print(head(new_grids[[year]]))
locs = seq(1, length(precip_all_grids), 4869) + year - 1
precip_all_grids_updated[c(locs)] <- new_grids[[year]]
}
# then: re-insert to db for that year
precip_all_grids_updated = vector(mode="double", length=length(precip_all_grids))
lapply(grid_ls, reinsert_precip, new_grids=new_grids)
year
head(new_grids[[year]])
reinsert_precip <- function(new_grids, year){
print(year)
print(head(new_grids[[year]]))
locs = seq(1, length(precip_all_grids), 4869) + year - 1
precip_all_grids_updated[c(locs)] <- new_grids[[year]]
}
# then: re-insert to db for that year
precip_all_grids_updated = vector(mode="double", length=length(precip_all_grids))
lapply(grid_ls, reinsert_precip, new_grids=new_grids)
# then: re-insert to db for that year
precip_all_grids_updated = vector(mode="double", length=length(precip_all_grids))
precip_all_grids_updated <- lapply(grid_ls, reinsert_precip, new_grids=new_grids)
reinsert_precip <- function(new_grids, year){
locs = seq(1, length(precip_all_grids), 4869) + year - 1
precip_all_grids_updated[c(locs)] <- new_grids[[year]]
}
# then: re-insert to db for that year
precip_all_grids_updated = vector(mode="double", length=length(precip_all_grids))
precip_all_grids_updated <- lapply(grid_ls, reinsert_precip, new_grids=new_grids)
precip_all_grids_updated[1:367]
length(precip_all_grids_updated)
length(precip_all_grids_updated[1])
length(precip_all_grids_updated[[1]])
precip_all_grids_updated[[1]]
precip_all_grids_updated[[2]]
new_grids[1]
# then: re-insert to db for that year
precip_all_grids_updated = vector(mode="double", length=length(precip_all_grids))
seq(1, 4869, 1)
for(i in seq(1, 4869, 1)){
locs = seq(1, length(precip_all_grids), 4869) + i - 1
precip_all_grids_updated[c(locs)] <- new_grids[[i]]
}
length(precip_all_grids_updated)
head(precip_all_grids_updated)
precip_all_grids_updated[1:367]
new_grids[[1]]
new_grids[[2]]
precip_all_grids_updated[4869:4870]
head(new_grids[[1]])
precip_all_grids_updated[300000]
length(files)
seq(1, length(files))
length(file[[file_num]][,6])
length(file[[1]][,6])
file_num = 1
precip_all_grids = file[[file_num]][,6]
precip_all_grids = files[[file_num]][,6]
length(files[[file_num]][,6])
length(precip_all_grids_updated)
# proof of concept for first year data (out of 64 total years)
precip_all_grids = files[[file_num]][,6] # precipe is 6th col of df
grid_ls = seq(1, 4869, 1)
all_grids = lapply(grid_ls, separate_years, precip_all_grids=precip_all_grids)
# next: apply an intensity alteration to each time series
new_grids = lapply(all_grids, precip_manip)
new_grids = lapply(new_grids, unlist)
# then: re-insert to db for that year
precip_all_grids_updated = vector(mode="double", length=length(precip_all_grids))
for(i in seq(1, 4869, 1)){
locs = seq(1, length(precip_all_grids), 4869) + i - 1
precip_all_grids_updated[c(locs)] <- new_grids[[i]]
}
files[[file_num]][,6] <- precip_all_grids_updated
length(files[[file_num]][,6])
1777185-1776820
precip_all_grids_updated = vector(mode="double", length=length(precip_all_grids))
length(precip_all_grids_updated)
length(new_grids)
4869*365
length(new_grids[[1]])
length(new_grids[[2]])
length(new_grids[[3]])
length(new_grids[[4]])
length(all_grids)
length(all_grids[[1]])
length(all_grids[[4]])
seq(1, length(precip_all_grids), 4869) + year - 1
length(locs)
16/4
16/5
16//5
16./5
16%/%5
16%%5
16%%4
4869+365
seq(1, length(precip_all_grids), 5234)
length(seq(1, length(precip_all_grids), 5234))
head(files[[1]])
# proof of concept for first year data (out of 64 total years)
precip_all_grids = files[[file_num]][,6] # precipe is 6th col of df
#################
### FUNCTIONS ###
#################
separate_days <- function(precip_all_grids, day){
locs = seq(1, length(precip_all_grids), 4869) + day - 1
grid = precip_all_grids[c(locs)]
return(grid)
}
precip_manip <- function(annual_precip){
annual_precip2 = lapply(annual_precip,`+`,1)
return(annual_precip2)
}
path = "/Users/noellepatterson/apps/Other/Climate_change_research /data_inputs/detrended-one-8th-rdata/"
setwd(path)
setwd(path)
filenames = list.files(pattern="*.rds")
files = lapply(filenames, readRDS)
file_num <- 1
# proof of concept for first year data (out of 64 total years)
precip_all_grids = files[[file_num]][,6] # precipe is 6th col of df
grid_ls = seq(1, 4869, 1)
# am somehow losing leap years in this step, then can't reinsert data into orig df
all_grids = lapply(grid_ls, separate_days, precip_all_grids=precip_all_grids)
View(all_grids)
4869*365
4868*365
# am somehow losing leap years in this step, then can't reinsert data into orig df
all_grids = lapply(grid_ls, separate_days, precip_all_grids=precip_all_grids)
grid_ls = seq(1, 4868, 1)
# am somehow losing leap years in this step, then can't reinsert data into orig df
all_grids = lapply(grid_ls, separate_days, precip_all_grids=precip_all_grids)
View(all_grids)
day
day = 100
locs = seq(1, length(precip_all_grids), 4869) + day - 1
locs
grid = precip_all_grids[c(locs)]
head(grid)
View(all_grids)
# next: apply an intensity alteration to each time series
new_grids = lapply(all_grids, precip_manip)
View(new_grids)
new_grids = lapply(new_grids, unlist)
# then: re-insert to db for that year
precip_all_grids_updated = vector(mode="double", length=length(precip_all_grids))
for(i in seq(1, 4869, 1)){
locs = seq(1, length(precip_all_grids), 4869) + i - 1
precip_all_grids_updated[c(locs)] <- new_grids[[i]]
}
for(i in seq(1, 4868, 1)){
locs = seq(1, length(precip_all_grids), 4869) + i - 1
precip_all_grids_updated[c(locs)] <- new_grids[[i]]
}
head(precip_all_grids_updated)
head(precip_all_grids)
tail(precip_all_grids_updated)
tail(precip_all_grids)
length(precip_all_grids)
# then: re-insert to db for that year
precip_all_grids_updated = vector(mode="double", length=length(precip_all_grids))
for(i in seq(1, 4868, 1)){
locs = seq(1, length(precip_all_grids), 4868) + i - 1
precip_all_grids_updated[c(locs)] <- new_grids[[i]]
}
tail(precip_all_grids_updated)
tail(precip_all_grids)
tail(precip_all_grids_updated)
which(precip_all_grids_updated==NA)
which(precip_all_grids_updated=="NA")
which(precip_all_grids_updated==0)
precip_all_grids_updated[4000:4010]
precip_all_grids_updated[-100:]
tail(precip_all_grids_updated, n=100)
tail(precip_all_grids_updated, n=366)
length(new_grids)
new_grids[[4868]]
length(new_grids[[4868]])
new_grids[[4867]]
new_grids[[1]]
new_grids[[5]]
new_grids[[4]]
new_grids[[1000]]
new_grids[[4600]]
all_grids[[4600]]
new_grids[[4600]]
length(new_grids[[4600]])
length(all_grids[[4600]])
all_grids[[4600]][365]
all_grids[[4700]][365]
all_grids[[4800]][365]
all_grids[[3000]][365]
which(is.na(precip_all_grids)
)
which(is.na(precip_all_grids_updated))
length(which(is.na(precip_all_grids_updated)))
new_grids[[4868]]
#################
### FUNCTIONS ###
#################
separate_days <- function(precip_all_grids, day){
locs = seq(1, length(precip_all_grids), 4868) + day - 1
grid = precip_all_grids[c(locs)]
return(grid)
}
# proof of concept for first year data (out of 64 total years)
precip_all_grids = files[[file_num]][,6] # precipe is 6th col of df
grid_ls = seq(1, 4868, 1)
# am somehow losing leap years in this step, then can't reinsert data into orig df
all_grids = lapply(grid_ls, separate_days, precip_all_grids=precip_all_grids)
# next: apply an intensity alteration to each time series
new_grids = lapply(all_grids, precip_manip)
new_grids = lapply(new_grids, unlist)
# then: re-insert to db for that year
precip_all_grids_updated = vector(mode="double", length=length(precip_all_grids))
for(i in seq(1, 4868, 1)){
locs = seq(1, length(precip_all_grids), 4868) + i - 1
precip_all_grids_updated[c(locs)] <- new_grids[[i]]
}
tail(precip_all_grids_updated)
tail(precip_all_grids)
which(is.na(precip_all_grids_updated))
files[[file_num]][,6] <- precip_all_grids_updated
files[[file_num]][,6]
for(file_num in seq(1, length(files))){
# proof of concept for first year data (out of 64 total years)
precip_all_grids = files[[file_num]][,6] # precipe is 6th col of df
grid_ls = seq(1, 4868, 1)
# am somehow losing leap years in this step, then can't reinsert data into orig df
all_grids = lapply(grid_ls, separate_days, precip_all_grids=precip_all_grids)
# next: apply an intensity alteration to each time series
new_grids = lapply(all_grids, precip_manip)
new_grids = lapply(new_grids, unlist)
# then: re-insert to db for that year
precip_all_grids_updated = vector(mode="double", length=length(precip_all_grids))
for(i in seq(1, 4868, 1)){
locs = seq(1, length(precip_all_grids), 4868) + i - 1
precip_all_grids_updated[c(locs)] <- new_grids[[i]]
}
files[[file_num]][,6] <- precip_all_grids_updated
# saveRDS(precip_all_grids_updated, "updated_precip.rds")
}
files[[5]][,6]
files[[7]][,6]
files[[30]][,6]
files[[60]][,6]
files[[64]][,6]
head(files[[64]])
head(files[[65]])
View(all_grids)
grid = annual_precip[[1]]
grid = all_grids[[1]]
grid[1:91, 306:-1]
c(grid[1:91], grid[306:-1])
c(grid[1:91], grid[306:length(grid)])
length(grid)
wet = c(grid[1:91], grid[306:length(grid)])
dry = c(grid[92:305])
length(dry)
length(dry) + length(wet)
sum(dry)
grid[92:305]*(1-dry_remove)
grid[92:305]*(1-.6)
sum(grid[92:305]*(1-.6))
grid[92:305] <- grid[92:305]*(1-dry_remove)
grid[92:305] <- grid[92:305]*(1-.6)
grid
sum(grid[92:305]*dry_remove)
sum(grid[92:305]*.6)
# set intensity parameters
dry_remove = .6 # val 0-1
sum(grid[92:305])
wet
c(1:91)
c(1:91, 306:365)
wet = c(grid[1:91], grid[306:length(grid)])
wet
?quantile
highflow_perc = .95 # val 0-1, percentile of extreme flows to make more extreme
highflow_add = .5 # val 0-1, prop of harvested water to add only to extreme days
highflow_val = quantile(grid[wet], highflow_perc)
highflow_val
quantile(grid[wet])
which(grid[wet]>0)
grid[wet]
# sum up precip from April - Oct (dry season)
wet = c(1:91, 306:length(grid)) # Nov-March
dry = c(92:305) # April - Oct
# Multiply all flow days in dry season by removal prop
grid[92:305] <- grid[92:305]*(1-dry_remove)
# tabulate havested water amt
dry_harvest = sum(grid[92:305]*dry_remove)
which(grid[wet]>0)
grid[which(grid[wet]>0)
]
grid[142]
grid[142]>0
grid[141]>0
grid[1]>0
grid[2]>0
grid[which(grid[wet]!=0)
]
grid[wet]
grid[142]
grid
grid[wet]
grid[wet][which(grid[wet]!=0)]
which(grid[wet] > highflow_val)
highflow_val
highflow_val = quantile(grid[wet][which(grid[wet]!=0)], highflow_perc)
highflow_days = which(grid[wet] > highflow_val)
length(highflow_days)
grid[wet]highflow_days[]
grid[wet][highflow_days]
(highflow_add*dry_harvest)/length(highflow_days)
# add the perc of highflow to those days from dry season harvest
add_each_highflow = (highflow_add*dry_harvest)/length(highflow_days)
grid[wet][highflow_days] <- grid[wet][highflow_days] + add_each_highflow
grid[wet][highflow_days]
grid
grid = all_grids[[1]]
grid
wet_days_add = grid[wet](which(grid[wet]>0) & which(grid[wet]!=  grid[wet] > highflow_val))
add_wet_days = dry_harvest*(1-highflow_add)
sum(grid)
sum(grid[92:305])
dry_harvest = sum(grid[92:305]*dry_remove)
add_wet_days = dry_harvest*(1-highflow_add)
grid[wet]
grid[grid[wet]]
grid[wet][highflow_days]
which(grid[wet]>0)
grid[wet](which(grid[wet]>0))
grid[wet][(which(grid[wet]>0))]
which(grid[wet]!=  grid[wet] > highflow_val)
grid[wet] > highflow_val
grid[wet]<highflow_val
grid[wet]>0
which(grid[wet]>0) & which(grid[wet]<highflow_val))
which(grid[wet]>0) & which(grid[wet]<highflow_val)
length(which(grid[wet]>0)
)
length(which(grid[wet]<highflow_val))
grid[wet]>0
grid[wet]<highflow_val
grid[wet]>0 & grid[wet]<highflow_val
grid[wet][grid[wet]>0 & grid[wet]<highflow_val]
highflow_val
grid[wet]
add_wet_days/length(wet_days_add)
wet_days_add = grid[wet][grid[wet]>0 & grid[wet]<highflow_val]
add_each_wet_day = add_wet_days/length(wet_days_add)
grid[wet][wet_days_add]
wet_days_add
# set intensity parameters
dry_remove = .6 # val 0-1
highflow_perc = .95 # val 0-1, percentile of extreme flows to make more extreme
highflow_add = .5 # val 0-1, prop of harvested water to add only to extreme days
# sum up precip from April - Oct (dry season)
wet = c(1:91, 306:length(grid)) # Nov-March
dry = c(92:305) # April - Oct
# Multiply all flow days in dry season by removal prop
grid[92:305] <- grid[92:305]*(1-dry_remove)
# tabulate havested water amt
dry_harvest = sum(grid[92:305]*dry_remove)
# quantify highflow perc val as percentile of all >0 flow days in wet season
highflow_val = quantile(grid[wet][which(grid[wet]!=0)], highflow_perc)
# ID days in wet season that are above highflow perc
highflow_days = which(grid[wet] > highflow_val) # locs correspond to grid[wet], not grid
# add the perc of highflow to those days from dry season harvest
add_each_highflow = (highflow_add*dry_harvest)/length(highflow_days)
grid
grid[wet][highflow_days] <- grid[wet][highflow_days] + add_each_highflow
grid
# tally number of all other flow days in wet season
add_wet_days = dry_harvest*(1-highflow_add)
wet_days_add = grid[wet][grid[wet]>0 & grid[wet]<highflow_val]
add_each_wet_day = add_wet_days/length(wet_days_add)
grid[wet][wet_days_add]
grid[wet][highflow_days]
[wet_days_add]
wet_days_add
length(wet_days_add)
grid[wet_days_add]
which(grid[wet][grid[wet]>0 & grid[wet]<highflow_val])
which(grid[wet]>0 & grid[wet]<highflow_val)
wet_days_loc = which(grid[wet]>0 & grid[wet]<highflow_val)
grid[wet][wet_days_loc]
grid
# apply rest of dry season harvest to all flow days in wet season
grid[wet][wet_days_loc] <- grid[wet][wet_days_loc] + add_each_wet_day
grid
intra_precip_manip <- function(annual_precip){
# set intensity parameters
dry_remove = .6 # val 0-1
highflow_perc = .95 # val 0-1, percentile of extreme flows to make more extreme
highflow_add = .5 # val 0-1, prop of harvested water to add only to extreme days
# apply intensity shift to each year individually
for(grid in annual_precip){
# sum up precip from April - Oct (dry season)
wet = c(1:91, 306:length(grid)) # Nov-March
dry = c(92:305) # April - Oct
# Multiply all flow days in dry season by removal prop
grid[92:305] <- grid[92:305]*(1-dry_remove)
# tabulate havested water amt
dry_harvest = sum(grid[92:305]*dry_remove)
# quantify highflow perc val as percentile of all >0 flow days in wet season
highflow_val = quantile(grid[wet][which(grid[wet]!=0)], highflow_perc)
# ID days in wet season that are above highflow perc
highflow_days = which(grid[wet] > highflow_val) # locs correspond to grid[wet], not grid
# add the perc of highflow to those days from dry season harvest
add_each_highflow = (highflow_add*dry_harvest)/length(highflow_days)
grid[wet][highflow_days] <- grid[wet][highflow_days] + add_each_highflow
# tally number of all other flow days in wet season (not incl highflows)
val_add_wet_days = dry_harvest*(1-highflow_add)
wet_days_loc = which(grid[wet]>0 & grid[wet]<highflow_val)
add_each_wet_day = val_add_wet_days/length(wet_days_loc)
# apply rest of dry season harvest to all flow days in wet season
grid[wet][wet_days_loc] <- grid[wet][wet_days_loc] + add_each_wet_day
}
annual_precip2 = lapply(annual_precip,`+`,1)
return(annual_precip2)
}
# Perform process for all 64 years in huge db
for(file_num in seq(1, length(files))){
# proof of concept for first year data (out of 64 total years)
precip_all_grids = files[[file_num]][,6] # precipe is 6th col of df
grid_ls = seq(1, 4868, 1)
# am somehow losing leap years in this step, then can't reinsert data into orig df
all_grids = lapply(grid_ls, separate_days, precip_all_grids=precip_all_grids)
# next: apply an intensity alteration to each time series
new_grids = lapply(all_grids, intra_precip_manip)
new_grids = lapply(new_grids, unlist)
# then: re-insert to db for that year
precip_all_grids_updated = vector(mode="double", length=length(precip_all_grids))
for(i in seq(1, 4868, 1)){
locs = seq(1, length(precip_all_grids), 4868) + i - 1
precip_all_grids_updated[c(locs)] <- new_grids[[i]]
}
files[[file_num]][,6] <- precip_all_grids_updated
# saveRDS(precip_all_grids_updated, "updated_precip.rds")
}
